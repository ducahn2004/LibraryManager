Index: src/main/java/org/group4/librarymanagercode/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.group4.librarymanagercode;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\npublic class Main extends Application {\r\n\r\n  @Override\r\n  public void start(@NotNull Stage stage) throws IOException {\r\n    FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource(\"BookView.fxml\"));\r\n    Scene scene = new Scene(fxmlLoader.load(), 1000, 700);\r\n    stage.setTitle(\"Library Manager\");\r\n    stage.setScene(scene);\r\n    stage.show();\r\n  }\r\n\r\n\r\n  public static void main(String[] args) {\r\n    launch();\r\n  }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/group4/librarymanagercode/Main.java b/src/main/java/org/group4/librarymanagercode/Main.java
--- a/src/main/java/org/group4/librarymanagercode/Main.java	(revision 727db2d55abcbab1293371058798d8af6e29d376)
+++ b/src/main/java/org/group4/librarymanagercode/Main.java	(date 1730300293718)
@@ -12,7 +12,7 @@
 
   @Override
   public void start(@NotNull Stage stage) throws IOException {
-    FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource("BookView.fxml"));
+    FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource("FirstPage.fxml"));
     Scene scene = new Scene(fxmlLoader.load(), 1000, 700);
     stage.setTitle("Library Manager");
     stage.setScene(scene);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b1381dc6-1017-492f-89b7-87d30bc1f173\" name=\"Changes\" comment=\"Add new classes and update enums for consistency&#10;&#10;Added classes for handling book lending, reservations, fines, and various types of transactions. Updated enum values to uppercase to maintain naming consistency across the project. Additionally, minor template adjustments were made to FXML files.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/group4/librarymanagercode/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/group4/librarymanagercode/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/group4/librarymanagercode/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/org/group4/librarymanagercode/Main.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Record\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$/..\" source=\"TuanAnhSatoh\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"Ahn\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;ducahn2004&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/ducahn2004/LibraryManager.git\",\r\n    \"accountId\": \"2827827f-cbbd-461c-9585-0de6046cf4f7\"\r\n  }\r\n}]]></component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2mnRj5w95CwrrKSt2HaicplndZg\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Lenovo/Documents/GitHub/LibraryManager/LibraryManagerCode\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Libraries\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.44942528\",\r\n    \"settings.editor.selected.configurable\": \"preferences.editor\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.group4.librarymanagercode.Main\" />\r\n      <module name=\"LibraryManagerCode\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.group4.librarymanagercode.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b1381dc6-1017-492f-89b7-87d30bc1f173\" name=\"Changes\" comment=\"\" />\r\n      <created>1727710485915</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1727710485915</updated>\r\n      <workItem from=\"1727777246259\" duration=\"1592000\" />\r\n      <workItem from=\"1727778880225\" duration=\"13000\" />\r\n      <workItem from=\"1727778903785\" duration=\"909000\" />\r\n      <workItem from=\"1727779834994\" duration=\"2308000\" />\r\n      <workItem from=\"1727782668961\" duration=\"9646000\" />\r\n      <workItem from=\"1727793125669\" duration=\"6445000\" />\r\n      <workItem from=\"1727827136730\" duration=\"1223000\" />\r\n      <workItem from=\"1727828770375\" duration=\"216000\" />\r\n      <workItem from=\"1727829218306\" duration=\"302000\" />\r\n      <workItem from=\"1727830983523\" duration=\"274000\" />\r\n      <workItem from=\"1727834480420\" duration=\"630000\" />\r\n      <workItem from=\"1727836311169\" duration=\"3301000\" />\r\n      <workItem from=\"1727851001967\" duration=\"8049000\" />\r\n      <workItem from=\"1727862511523\" duration=\"227000\" />\r\n      <workItem from=\"1727863309412\" duration=\"1581000\" />\r\n      <workItem from=\"1727868018787\" duration=\"334000\" />\r\n      <workItem from=\"1727879649556\" duration=\"1227000\" />\r\n      <workItem from=\"1727925178005\" duration=\"2439000\" />\r\n      <workItem from=\"1727964565492\" duration=\"3589000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Update hello-view.fxml, InitialPageController.java, Main.java, pom.xml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727710981615</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727710981615</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Refactor enum classes and convert Person and Address to records&#10;&#10;Replaced enums with more descriptive values for BookStatus, AccountStatus, and added a new RevervationStatus enum. Converted Person and Address classes to records for better immutable data representation. Removed the unused resetPassword method from Account class.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727784607435</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727784607435</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Enhance Account and Member classes with constructors and setters&#10;&#10;Updated the `Account` class to include constructors, getters, and setters. Improved the `Member` class by extending `Account` and adding initialization in the constructor. Additionally, updated `AccountStatus` enum to use camelCase for consistency.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727787254144</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727787254144</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Delete compiled classes and FXML resources&#10;&#10;Removed all compiled class files, FXML files, and image assets from the target directory to clean up the project. These generated files are unnecessary for version control and can be rebuilt.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727788584410</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727788584410</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Add Catalog, Search, and Rank classes, and extend Book&#10;&#10;Introduced new `Catalog`, `Search`, and `Rank` classes to handle library cataloging, searching, and ranking functionalities. Enhanced `Book` and `BookItem` classes with constructors and additional fields to support these new features. Updated `Author` and `Librarian` to include books and membership control functionality respectively.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727800238587</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727800238587</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Rename class Rank to Rack&#10;&#10;Renamed the class `Rank` to `Rack` to better reflect its purpose of representing a physical book rack. Updated relevant files and configuration entries to apply this change consistently across the project.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727800564488</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727800564488</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Add new classes and update enums for consistency&#10;&#10;Added classes for handling book lending, reservations, fines, and various types of transactions. Updated enum values to uppercase to maintain naming consistency across the project. Additionally, minor template adjustments were made to FXML files.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727856558147</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727856558147</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Update hello-view.fxml, InitialPageController.java, Main.java, pom.xml\" />\r\n    <MESSAGE value=\"Refactor enum classes and convert Person and Address to records&#10;&#10;Replaced enums with more descriptive values for BookStatus, AccountStatus, and added a new RevervationStatus enum. Converted Person and Address classes to records for better immutable data representation. Removed the unused resetPassword method from Account class.\" />\r\n    <MESSAGE value=\"Enhance Account and Member classes with constructors and setters&#10;&#10;Updated the `Account` class to include constructors, getters, and setters. Improved the `Member` class by extending `Account` and adding initialization in the constructor. Additionally, updated `AccountStatus` enum to use camelCase for consistency.\" />\r\n    <MESSAGE value=\"Delete compiled classes and FXML resources&#10;&#10;Removed all compiled class files, FXML files, and image assets from the target directory to clean up the project. These generated files are unnecessary for version control and can be rebuilt.\" />\r\n    <MESSAGE value=\"Add Catalog, Search, and Rank classes, and extend Book&#10;&#10;Introduced new `Catalog`, `Search`, and `Rank` classes to handle library cataloging, searching, and ranking functionalities. Enhanced `Book` and `BookItem` classes with constructors and additional fields to support these new features. Updated `Author` and `Librarian` to include books and membership control functionality respectively.\" />\r\n    <MESSAGE value=\"Rename class Rank to Rack&#10;&#10;Renamed the class `Rank` to `Rack` to better reflect its purpose of representing a physical book rack. Updated relevant files and configuration entries to apply this change consistently across the project.\" />\r\n    <MESSAGE value=\"Add new classes and update enums for consistency&#10;&#10;Added classes for handling book lending, reservations, fines, and various types of transactions. Updated enum values to uppercase to maintain naming consistency across the project. Additionally, minor template adjustments were made to FXML files.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add new classes and update enums for consistency&#10;&#10;Added classes for handling book lending, reservations, fines, and various types of transactions. Updated enum values to uppercase to maintain naming consistency across the project. Additionally, minor template adjustments were made to FXML files.\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 727db2d55abcbab1293371058798d8af6e29d376)
+++ b/.idea/workspace.xml	(date 1730300769569)
@@ -6,7 +6,11 @@
   <component name="ChangeListManager">
     <list default="true" id="b1381dc6-1017-492f-89b7-87d30bc1f173" name="Changes" comment="Add new classes and update enums for consistency&#10;&#10;Added classes for handling book lending, reservations, fines, and various types of transactions. Updated enum values to uppercase to maintain naming consistency across the project. Additionally, minor template adjustments were made to FXML files.">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/group4/librarymanagercode/BookViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/group4/librarymanagercode/BookViewController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/group4/librarymanagercode/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/group4/librarymanagercode/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/group4/test/TestRun.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/group4/test/TestRun.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/group4/librarymanagercode/Login.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/group4/librarymanagercode/Login.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/org/group4/librarymanagercode/Login.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/group4/librarymanagercode/Login.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/org/group4/librarymanagercode/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/group4/librarymanagercode/Main.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -41,7 +45,7 @@
     </favorite-branches>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$/.." value="Ahn" />
+        <entry key="$PROJECT_DIR$/.." value="Tr.ducanh" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
@@ -52,12 +56,12 @@
     &quot;assignee&quot;: &quot;ducahn2004&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/ducahn2004/LibraryManager.git",
-    "accountId": "2827827f-cbbd-461c-9585-0de6046cf4f7"
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/ducahn2004/LibraryManager.git&quot;,
+    &quot;accountId&quot;: &quot;2827827f-cbbd-461c-9585-0de6046cf4f7&quot;
   }
-}]]></component>
+}</component>
   <component name="MavenImportPreferences">
     <option name="generalSettings">
       <MavenGeneralSettings>
@@ -76,10 +80,11 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "Application.Main.executor": "Run",
+    "Application.TestRun.executor": "Run",
     "git-widget-placeholder": "master",
     "ignore.virus.scanning.warn.message": "true",
     "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/Lenovo/Documents/GitHub/LibraryManager/LibraryManagerCode",
+    "last_opened_file_path": "C:/Program Files/Java/jdk-21/openjfx-23.0.1_windows-x64_bin-sdk/javafx-sdk-23.0.1/lib/javafx.web.jar",
     "node.js.detected.package.eslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
@@ -91,13 +96,26 @@
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Application.Main">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="org.group4.librarymanagercode.Main" />
       <module name="LibraryManagerCode" />
       <extension name="coverage">
         <pattern>
           <option name="PATTERN" value="org.group4.librarymanagercode.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="TestRun" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="org.group4.test.TestRun" />
+      <module name="LibraryManagerCode" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.group4.test.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -107,6 +125,8 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Application.TestRun" />
         <item itemvalue="Application.Main" />
       </list>
     </recent_temporary>
Index: target/classes/org/group4/librarymanagercode/Login.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.PasswordField?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" prefHeight=\"550.0\" prefWidth=\"700.0\" xmlns=\"http://javafx.com/javafx/23\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"org.group4.librarymanagercode.LoginController\">\r\n   <children>\r\n      <ImageView fitHeight=\"353.0\" fitWidth=\"368.0\" layoutX=\"56.0\" layoutY=\"99.0\">\r\n         <image>\r\n            <Image url=\"@Image/Library-rafiki.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <Pane layoutX=\"424.0\" layoutY=\"185.0\" prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n         <children>\r\n            <Label layoutX=\"66.0\" layoutY=\"14.0\" text=\"Login\" textAlignment=\"CENTER\" textFill=\"#403333\">\r\n               <font>\r\n                  <Font name=\".VnHelvetIns Medium\" size=\"30.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField layoutX=\"2.0\" layoutY=\"59.0\" prefHeight=\"26.0\" prefWidth=\"196.0\" promptText=\"Account \" />\r\n            <PasswordField layoutX=\"2.0\" layoutY=\"100.0\" prefHeight=\"26.0\" prefWidth=\"196.0\" promptText=\"Password\" />\r\n            <Button layoutX=\"57.0\" layoutY=\"146.0\" mnemonicParsing=\"false\" prefHeight=\"26.0\" prefWidth=\"86.0\" text=\"Login\" />\r\n         </children>\r\n      </Pane>\r\n      <Button fx:id=\"signUpButton\" layoutX=\"624.0\" layoutY=\"26.0\" mnemonicParsing=\"false\" onAction=\"#handleGoToSignUPAction\" text=\"Sign Up\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/org/group4/librarymanagercode/Login.fxml b/target/classes/org/group4/librarymanagercode/Login.fxml
--- a/target/classes/org/group4/librarymanagercode/Login.fxml	(revision 727db2d55abcbab1293371058798d8af6e29d376)
+++ b/target/classes/org/group4/librarymanagercode/Login.fxml	(date 1730302082103)
@@ -10,25 +10,41 @@
 <?import javafx.scene.layout.Pane?>
 <?import javafx.scene.text.Font?>
 
-<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" prefHeight="550.0" prefWidth="700.0" xmlns="http://javafx.com/javafx/23" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.group4.librarymanagercode.LoginController">
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" prefHeight="550.0" prefWidth="700.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.group4.librarymanagercode.LoginController">
    <children>
-      <ImageView fitHeight="353.0" fitWidth="368.0" layoutX="56.0" layoutY="99.0">
+      <AnchorPane prefHeight="125.0" prefWidth="700.0" style="-fx-background-color: #003399;">
+         <children>
+            <ImageView fitHeight="74.0" fitWidth="86.0" layoutX="39.0" layoutY="35.0" pickOnBounds="true" preserveRatio="true">
+               <image>
+                  <Image url="@Image/logo.jpg.png" />
+               </image>
+            </ImageView>
+            <Label layoutX="124.0" layoutY="54.0" text="Library Management System" textFill="WHITE">
+               <font>
+                  <Font size="24.0" />
+               </font>
+            </Label>
+         </children>
+      </AnchorPane>
+      <ImageView fitHeight="353.0" fitWidth="368.0" layoutY="126.0">
          <image>
             <Image url="@Image/Library-rafiki.png" />
          </image>
       </ImageView>
-      <Pane layoutX="424.0" layoutY="185.0" prefHeight="200.0" prefWidth="200.0">
+      <Pane layoutX="366.0" layoutY="151.0" prefHeight="262.0" prefWidth="302.0">
          <children>
-            <Label layoutX="66.0" layoutY="14.0" text="Login" textAlignment="CENTER" textFill="#403333">
+            <Label layoutX="114.0" layoutY="50.0" text="Login" textAlignment="CENTER" textFill="#201212">
                <font>
                   <Font name=".VnHelvetIns Medium" size="30.0" />
                </font>
             </Label>
-            <TextField layoutX="2.0" layoutY="59.0" prefHeight="26.0" prefWidth="196.0" promptText="Account " />
-            <PasswordField layoutX="2.0" layoutY="100.0" prefHeight="26.0" prefWidth="196.0" promptText="Password" />
-            <Button layoutX="57.0" layoutY="146.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="86.0" text="Login" />
+            <TextField layoutX="53.0" layoutY="105.0" prefHeight="26.0" prefWidth="196.0" promptText="Account " />
+            <PasswordField layoutX="53.0" layoutY="150.0" prefHeight="26.0" prefWidth="196.0" promptText="Password" />
+            <Button layoutX="108.0" layoutY="192.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="86.0" style="-fx-background-color: #0056b3;" text="Login" textFill="WHITE">
+               <font>
+                  <Font name="System Bold" size="12.0" />
+               </font></Button>
          </children>
       </Pane>
-      <Button fx:id="signUpButton" layoutX="624.0" layoutY="26.0" mnemonicParsing="false" onAction="#handleGoToSignUPAction" text="Sign Up" />
    </children>
 </AnchorPane>
Index: src/main/java/org/group4/test/TestRun.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.group4.test;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport org.group4.base.entities.Author;\r\nimport org.group4.base.entities.Book;\r\nimport org.group4.base.users.Member;\r\nimport org.group4.base.entities.Person;\r\nimport org.group4.base.books.BookItem;\r\nimport org.group4.database.BookDatabase;\r\nimport org.group4.database.BookItemDatabase;\r\nimport org.group4.database.MemberDatabase;\r\nimport org.group4.base.users.Librarian;\r\nimport org.group4.database.AccountDatabase;\r\nimport org.group4.base.enums.BookFormat;\r\n\r\nimport java.util.Scanner;\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\npublic class TestRun {\r\n    private static Member loggedInMember = null;\r\n    private static Librarian loggedInLibrarian = null;\r\n\r\n    public static void main (String[]args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        while (true) {\r\n            if (loggedInMember == null && loggedInLibrarian == null) {\r\n                System.out.println(\"1. Member\");\r\n                System.out.println(\"2. Librarian\");\r\n                System.out.println(\"3. Exit\");\r\n                System.out.print(\"Choose an option: \");\r\n                int choice = scanner.nextInt();\r\n                scanner.nextLine();\r\n\r\n                try {\r\n                    switch (choice) {\r\n                        case 1 -> memberMenu(scanner);\r\n                        case 2 -> librarianLogin(scanner);\r\n                        case 3 -> {\r\n                            System.out.println(\"Exiting...\");\r\n                            return;\r\n                        }\r\n                        default -> System.out.println(\"Invalid option. Please try again.\");\r\n                    }\r\n                } catch (IllegalArgumentException | IllegalStateException e) {\r\n                    System.out.println(\"Error: \" + e.getMessage());\r\n                }\r\n            } else if (loggedInMember != null) {\r\n                memberFunctions(scanner);\r\n            } else { // loggedInLibrarian != null\r\n                librarianFunctions(scanner);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void memberMenu (Scanner scanner){\r\n        System.out.println(\"1. Login\");\r\n        System.out.println(\"2. Register\");\r\n        System.out.println(\"3. Forgot Password\");\r\n        System.out.println(\"4. Back\");\r\n        System.out.print(\"Choose an option: \");\r\n        int choice = scanner.nextInt();\r\n        scanner.nextLine(); // Consume newline\r\n\r\n        try {\r\n            switch (choice) {\r\n                case 1 -> login(scanner);\r\n                case 2 -> register(scanner);\r\n                case 3 -> forgotPassword(scanner);\r\n                case 4 -> {\r\n                    loggedInMember = null;\r\n                    loggedInLibrarian = null;\r\n                }\r\n                default -> System.out.println(\"Invalid option. Please try again.\");\r\n            }\r\n        } catch (IllegalArgumentException | IllegalStateException e) {\r\n            System.out.println(\"Error: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private static void librarianLogin (Scanner scanner){\r\n        System.out.print(\"Enter Librarian ID: \");\r\n        String id = scanner.nextLine();\r\n        System.out.print(\"Enter Password: \");\r\n        String password = scanner.nextLine();\r\n\r\n        Librarian librarian = AccountDatabase.getInstance().getItems().stream()\r\n                .filter(acc -> acc.getId().equals(id))\r\n                .map(acc -> (Librarian) acc)\r\n                .findFirst()\r\n                .orElse(null);\r\n        if (librarian != null && librarian.getPassword().equals(password)) {\r\n            loggedInLibrarian = librarian;\r\n            System.out.println(\"Login successful!\");\r\n        } else {\r\n            throw new IllegalArgumentException(\"Invalid ID or Password.\");\r\n        }\r\n    }\r\n\r\n    private static void memberFunctions (Scanner scanner){\r\n        System.out.println(\"1. View Member Details\");\r\n        System.out.println(\"2. View Book Details\");\r\n        System.out.println(\"3. Lend Book\");\r\n        System.out.println(\"4. Reserve Book\");\r\n        System.out.println(\"5. Renew Book\");\r\n        System.out.println(\"6. Cancel Reservation\");\r\n        System.out.println(\"7. Return Book\");\r\n        System.out.println(\"8. View Lending History\");\r\n        System.out.println(\"9. View Reservation History\");\r\n        System.out.println(\"10. View All Notifications\");\r\n        System.out.println(\"11. Update Information\");\r\n        System.out.println(\"12. Logout\");\r\n        System.out.print(\"Choose an option: \");\r\n        int choice = scanner.nextInt();\r\n        scanner.nextLine(); // Consume newline\r\n\r\n        try {\r\n            switch (choice) {\r\n                case 1 -> loggedInMember.printDetails();\r\n                case 2 -> viewBookDetails(scanner);\r\n                case 3 -> lendBook(scanner);\r\n                case 4 -> reserveBook(scanner);\r\n                case 5 -> renewBook(scanner);\r\n                case 6 -> cancelReservation(scanner);\r\n                case 7 -> returnBook(scanner);\r\n                case 8 -> loggedInMember.viewLendingHistory();\r\n                case 9 -> loggedInMember.viewReservationsHistory();\r\n                case 10 -> loggedInMember.viewNotifications();\r\n                case 11 -> updateInformation(scanner);\r\n                case 12 -> loggedInMember = null;\r\n                default -> System.out.println(\"Invalid option. Please try again.\");\r\n            }\r\n        } catch (IllegalArgumentException | IllegalStateException e) {\r\n            System.out.println(\"Error: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private static void librarianFunctions (Scanner scanner){\r\n        System.out.println(\"1. Add Book\");\r\n        System.out.println(\"2. Add Book Item\");\r\n        System.out.println(\"3. Remove Book Item\");\r\n        System.out.println(\"4. Block Member\");\r\n        System.out.println(\"5. Unblock Member\");\r\n        System.out.println(\"6. View Member Details\");\r\n        System.out.println(\"7. View All Books\");\r\n        System.out.println(\"8. View All Book Items\");\r\n        System.out.println(\"9. Logout\");\r\n        System.out.println(\"10. Exit\");\r\n        System.out.print(\"Choose an option: \");\r\n        int choice = scanner.nextInt();\r\n        scanner.nextLine();\r\n\r\n        try {\r\n            switch (choice) {\r\n                case 1 -> addBook(scanner);\r\n                case 2 -> addBookItem(scanner);\r\n                case 3 -> removeBookItem(scanner);\r\n                case 4 -> blockMember(scanner);\r\n                case 5 -> unblockMember(scanner);\r\n                case 6 -> viewMemberDetails(scanner);\r\n                case 7 -> viewAllBooks();\r\n                case 8 -> viewAllBookItems(scanner);\r\n                case 9 -> loggedInLibrarian = null;\r\n                case 10 -> {\r\n                    System.out.println(\"Exiting...\");\r\n                    System.exit(0);\r\n                }\r\n                default -> System.out.println(\"Invalid option. Please try again.\");\r\n            }\r\n        } catch (IllegalArgumentException | IllegalStateException e) {\r\n            System.out.println(\"Error: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    private static void login(Scanner scanner) {\r\n        System.out.print(\"Enter Member ID: \");\r\n        String id = scanner.nextLine();\r\n        System.out.print(\"Enter Password: \");\r\n        String password = scanner.nextLine();\r\n\r\n        Member member = Member.fetchMemberDetails(id);\r\n        if (member != null && member.getPassword().equals(password)) {\r\n            loggedInMember = member;\r\n            System.out.println(\"Login successful!\");\r\n        } else {\r\n            throw new IllegalArgumentException(\"Invalid ID or Password.\");\r\n        }\r\n    }\r\n\r\n    private static void register(Scanner scanner) {\r\n        System.out.print(\"Enter Member ID: \");\r\n        String id = scanner.nextLine();\r\n        System.out.print(\"Enter Password: \");\r\n        String password = scanner.nextLine();\r\n        System.out.print(\"Enter Name: \");\r\n        String name = scanner.nextLine();\r\n        System.out.print(\"Enter Email: \");\r\n        String email = scanner.nextLine();\r\n        System.out.print(\"Enter Phone Number: \");\r\n        String phoneNumber = scanner.nextLine();\r\n        validatePhoneNumber(phoneNumber);\r\n\r\n        Person person = new Person(name, email, phoneNumber);\r\n        Member member = new Member(id, password, person);\r\n        MemberDatabase.getInstance().addItem(member);\r\n        System.out.println(\"Registration successful!\");\r\n    }\r\n\r\n    private static void forgotPassword(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Member ID: \");\r\n        String id = scanner.nextLine();\r\n        Member member = Member.fetchMemberDetails(id);\r\n        if (member != null) {\r\n            System.out.print(\"Enter New Password: \");\r\n            String newPassword = scanner.nextLine();\r\n            member.setPassword(newPassword);\r\n            System.out.println(\"Password updated successfully!\");\r\n        } else {\r\n            throw new IllegalArgumentException(\"Member not found.\");\r\n        }\r\n    }\r\n\r\n    private static void viewBookDetails(Scanner scanner) {\r\n        List<BookItem> bookItems = BookItemDatabase.getInstance().getItems();\r\n        for (BookItem bookItem : bookItems) {\r\n            System.out.println(\"Barcode: \" + bookItem.getBarcode());\r\n            System.out.println(\"Title: \" + bookItem.getTitle());\r\n            System.out.println(\"Author: \" + bookItem.getAuthors());\r\n        }\r\n        System.out.print(\"Enter Book Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        BookItem bookItem = BookItem.fetchBookItemDetails(barcode);\r\n        if (bookItem != null) {\r\n            bookItem.printDetails();\r\n        } else {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n    }\r\n\r\n    private static void lendBook(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Book Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        BookItem bookItem = BookItem.fetchBookItemDetails(barcode);\r\n        if (bookItem != null) {\r\n            try {\r\n                loggedInMember.lendBookItem(bookItem);\r\n                System.out.println(\"Book lent successfully!\");\r\n            } catch (IllegalStateException e) {\r\n                throw new IllegalArgumentException(e.getMessage());\r\n            }\r\n        } else {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n    }\r\n\r\n    private static void reserveBook(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Book Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        BookItem bookItem = BookItem.fetchBookItemDetails(barcode);\r\n        if (bookItem != null) {\r\n            try {\r\n                loggedInMember.reserveBookItem(bookItem);\r\n                System.out.println(\"Book reserved successfully!\");\r\n            } catch (IllegalStateException e) {\r\n                throw new IllegalArgumentException(e.getMessage());\r\n            }\r\n        } else {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n    }\r\n\r\n    private static void renewBook(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Book Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        BookItem bookItem = BookItem.fetchBookItemDetails(barcode);\r\n        if (bookItem != null) {\r\n            try {\r\n                loggedInMember.renewBookItem(bookItem);\r\n                System.out.println(\"Book renewed successfully!\");\r\n            } catch (IllegalStateException e) {\r\n                throw new IllegalArgumentException(e.getMessage());\r\n            }\r\n        } else {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n    }\r\n\r\n    private static void cancelReservation(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Book Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        BookItem bookItem = BookItem.fetchBookItemDetails(barcode);\r\n        if (bookItem != null) {\r\n            try {\r\n                loggedInMember.cancelReservation(bookItem);\r\n                System.out.println(\"Reservation cancelled successfully!\");\r\n            } catch (IllegalStateException e) {\r\n                throw new IllegalArgumentException(e.getMessage());\r\n            }\r\n        } else {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n    }\r\n\r\n    private static void returnBook(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Book Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        BookItem bookItem = BookItem.fetchBookItemDetails(barcode);\r\n        if (bookItem != null) {\r\n            try {\r\n                loggedInMember.returnBookItem(bookItem);\r\n                System.out.println(\"Book returned successfully!\");\r\n            } catch (IllegalStateException e) {\r\n                throw new IllegalArgumentException(e.getMessage());\r\n            }\r\n        } else {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n    }\r\n\r\n    private static void updateInformation(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter New Name: \");\r\n        String changeName = scanner.nextLine();\r\n        System.out.print(\"Enter New Email: \");\r\n        String changeEmail = scanner.nextLine();\r\n        System.out.print(\"Enter Phone Number: \");\r\n        String phoneNumber = scanner.nextLine();\r\n        validatePhoneNumber(phoneNumber);\r\n\r\n        Person person = new Person(changeName, changeEmail, phoneNumber);\r\n        loggedInMember.updateInformation(person);\r\n        System.out.println(\"Information updated successfully!\");\r\n    }\r\n\r\n    private static void validatePhoneNumber(@NotNull String phoneNumber) {\r\n        if (!phoneNumber.matches(\"\\\\d{10}\")) {\r\n            throw new IllegalArgumentException(\"Phone number must be exactly 10 digits.\");\r\n        }\r\n    }\r\n\r\n    private static void addBook(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter ISBN: \");\r\n        String isbn = scanner.nextLine();\r\n        System.out.print(\"Enter Title: \");\r\n        String title = scanner.nextLine();\r\n        System.out.print(\"Enter Subject: \");\r\n        String subject = scanner.nextLine();\r\n        System.out.print(\"Enter Publisher: \");\r\n        String publisher = scanner.nextLine();\r\n        System.out.print(\"Enter Language: \");\r\n        String language = scanner.nextLine();\r\n        System.out.print(\"Enter Number of Pages: \");\r\n        int numberOfPages = scanner.nextInt();\r\n        scanner.nextLine();\r\n        System.out.print(\"Enter Authors: \");\r\n        ArrayList<Author> authors = new ArrayList<>();\r\n        while (true) {\r\n            System.out.print(\"Enter Author Name (or 'done' to finish): \");\r\n            String authorName = scanner.nextLine();\r\n            if (authorName.equalsIgnoreCase(\"done\")) {\r\n                break;\r\n            }\r\n            System.out.print(\"Enter Author Description: \");\r\n            String authorDescription = scanner.nextLine();\r\n            authors.add(new Author(authorName));\r\n        }\r\n        Book book = new Book(isbn, title, subject, publisher, language, numberOfPages, authors);\r\n        loggedInLibrarian.addBook(book);\r\n        System.out.println(\"Book added successfully!\");\r\n    }\r\n\r\n    private static void addBookItem(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Book ISBN: \");\r\n        String isbn = scanner.nextLine();\r\n        Book book = BookDatabase.getInstance().getItems().stream()\r\n                .filter(b -> b.getISBN().equals(isbn))\r\n                .findFirst()\r\n                .orElse(null);\r\n        if (book == null) {\r\n            throw new IllegalArgumentException(\"Book not found.\");\r\n        }\r\n        System.out.print(\"Enter Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        System.out.print(\"Is Reference Only? (true/false): \");\r\n        boolean isReferenceOnly = scanner.nextBoolean();\r\n        scanner.nextLine();\r\n        System.out.print(\"Enter Price: \");\r\n        double price = scanner.nextDouble();\r\n        scanner.nextLine();\r\n        System.out.print(\"Enter Format (HARDCOVER, PAPERBACK, AUDIOBOOK, EBOOK,): \");\r\n        BookFormat format = BookFormat.valueOf(scanner.nextLine().toUpperCase());\r\n        System.out.print(\"Enter Date of Purchase (yyyy-MM-dd): \");\r\n        LocalDate dateOfPurchase = LocalDate.parse(scanner.nextLine());\r\n        System.out.print(\"Enter Publication Date (yyyy-MM-dd): \");\r\n        LocalDate publicationDate = LocalDate.parse(scanner.nextLine());\r\n        BookItem bookItem = new BookItem(book, barcode, isReferenceOnly, price, format, dateOfPurchase, publicationDate);\r\n        loggedInLibrarian.addBookItem(bookItem);\r\n    }\r\n\r\n    private static void removeBookItem(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter BookItem Barcode: \");\r\n        String barcode = scanner.nextLine();\r\n        loggedInLibrarian.removeBookItem(barcode);\r\n    }\r\n\r\n    private static void blockMember(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Member ID: \");\r\n        String id = scanner.nextLine();\r\n        if (Librarian.blockMember(id)) {\r\n            System.out.println(\"Member blocked successfully!\");\r\n        } else {\r\n            throw new IllegalArgumentException(\"Member not found.\");\r\n        }\r\n    }\r\n\r\n    private static void unblockMember(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Member ID: \");\r\n        String id = scanner.nextLine();\r\n        if (loggedInLibrarian.unblockMember(id)) {\r\n            System.out.println(\"Member unblocked successfully!\");\r\n        } else {\r\n            throw new IllegalArgumentException(\"Member not found.\");\r\n        }\r\n    }\r\n\r\n    private static void viewMemberDetails(@NotNull Scanner scanner) {\r\n        System.out.print(\"Enter Member ID: \");\r\n        String id = scanner.nextLine();\r\n        loggedInLibrarian.viewMemberDetails(id);\r\n    }\r\n\r\n    private static void viewAllBooks() {\r\n        List<Book> books = BookDatabase.getInstance().getItems();\r\n        for (Book book : books) {\r\n            book.printDetails();\r\n        }\r\n    }\r\n\r\n    private static void viewAllBookItems(Scanner scanner) {\r\n        System.out.print(\"Enter Book ISBN: \");\r\n        String isbn = scanner.nextLine();\r\n        List<BookItem> bookItems = BookItemDatabase.getInstance().getItems().stream()\r\n                .filter(item -> item.getISBN().equals(isbn))\r\n                .toList();\r\n        for (BookItem bookItem : bookItems) {\r\n            bookItem.printDetails();\r\n        }\r\n    }\r\n\r\n}
===================================================================
diff --git a/src/main/java/org/group4/test/TestRun.java b/src/main/java/org/group4/test/TestRun.java
--- a/src/main/java/org/group4/test/TestRun.java	(revision 727db2d55abcbab1293371058798d8af6e29d376)
+++ b/src/main/java/org/group4/test/TestRun.java	(date 1730212494018)
@@ -17,6 +17,8 @@
 
 import java.util.Scanner;
 import org.jetbrains.annotations.NotNull;
+import java.io.*;
+
 
 public class TestRun {
     private static Member loggedInMember = null;
@@ -24,6 +26,17 @@
 
     public static void main (String[]args){
         Scanner scanner = new Scanner(System.in);
+
+        try {
+            PrintWriter pw = new PrintWriter("/Users/Lenovo/Documents/GitHub/file.txt", "UTF-8");
+            pw.println("Logged in member: 22022189");
+            pw.flush();
+            pw.close();
+
+
+        }catch (Exception e) {
+            e.printStackTrace();
+        }
         while (true) {
             if (loggedInMember == null && loggedInLibrarian == null) {
                 System.out.println("1. Member");
@@ -52,6 +65,7 @@
                 librarianFunctions(scanner);
             }
         }
+
     }
 
     private static void memberMenu (Scanner scanner){
Index: src/main/java/org/group4/librarymanagercode/BookViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.group4.librarymanagercode;\r\n\r\nimport com.jfoenix.controls.JFXButton;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport javafx.beans.property.SimpleObjectProperty;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.ContextMenu;\r\nimport javafx.scene.control.TableRow;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\nimport org.group4.base.entities.Book;\r\nimport org.group4.base.entities.Author;\r\n//import org.group4.base.books.Book;\r\n\r\npublic class BookViewController {\r\n\r\n  private ObservableList<Book> bookList = FXCollections.observableArrayList();\r\n\r\n  public JFXButton homeButton;\r\n  @FXML\r\n  private TableView<Book> tableView = new TableView<>(bookList);\r\n\r\n  @FXML\r\n  private TableColumn<Book, String> ISBN = new TableColumn<>(\"ISBN\");\r\n\r\n  @FXML\r\n  private TableColumn<Book, String> bookName = new TableColumn<>(\"Name\");\r\n\r\n  @FXML\r\n  private TableColumn<Book, String> bookSubject = new TableColumn<>(\"Subject\");\r\n\r\n  @FXML\r\n  private TableColumn<Book, String> bookPublisher = new TableColumn<>(\"Publisher\");\r\n\r\n  @FXML\r\n  private TableColumn<Book, String> bookLanguage = new TableColumn<>(\"Language\");\r\n\r\n  @FXML\r\n  private TableColumn<Book, Integer> numberOfPages = new TableColumn<>(\"Pages\");\r\n\r\n  @FXML\r\n  private TableColumn<Book, String> bookAuthor = new TableColumn<>(\"Author\");\r\n\r\n  @FXML\r\n  private ContextMenu contextMenu;\r\n\r\n  @FXML\r\n  private TextField searchField;\r\n\r\n  //  private ObservableList<Book> bookList = FXCollections.observableArrayList();\r\n\r\n  // This method is called by the FXMLLoader when initialization is complete\r\n  @FXML\r\n  public void initialize() {\r\n\r\n    // Initialize columns\r\n    ISBN.setCellValueFactory(cellData -> new SimpleStringProperty(cellData.getValue().getISBN()));\r\n    bookName.setCellValueFactory(\r\n        cellData -> new SimpleStringProperty(cellData.getValue().getTitle()));\r\n    bookSubject.setCellValueFactory(\r\n        cellData -> new SimpleStringProperty(cellData.getValue().getSubject()));\r\n    bookPublisher.setCellValueFactory(\r\n        cellData -> new SimpleStringProperty(cellData.getValue().getPublisher()));\r\n    bookLanguage.setCellValueFactory(\r\n        cellData -> new SimpleStringProperty(cellData.getValue().getLanguage()));\r\n    numberOfPages.setCellValueFactory(cellData ->\r\n        new SimpleObjectProperty<>(cellData.getValue().getNumberOfPages()));\r\n    bookAuthor.setCellValueFactory(\r\n        cellData -> new SimpleStringProperty(cellData.getValue().getAuthorsAsString()));\r\n    tableView.getColumns()\r\n        .addAll(ISBN, bookName, bookSubject, bookPublisher, bookLanguage, numberOfPages,\r\n            bookAuthor);\r\n    // Add data to the table (sample data can be fetched from service or database)\r\n    loadBookData();\r\n    // Add row click event listener\r\n    tableView.setRowFactory(tv -> {\r\n      TableRow<Book> row = new TableRow<>();\r\n      row.setOnMouseClicked(event -> {\r\n        if (event.getClickCount() == 2 && (!row.isEmpty())) {\r\n          Book selectedItem = row.getItem();\r\n          showDetailPage(selectedItem);\r\n        }\r\n      });\r\n      return row;\r\n    });\r\n    // Add a listener for the search field\r\n    searchField.textProperty()\r\n        .addListener((observable, oldValue, newValue) -> filterBookList(newValue));\r\n  }\r\n\r\n  private void showDetailPage(Book book) {\r\n    try {\r\n      FXMLLoader loader = new FXMLLoader(getClass().getResource(\"BookDetails.fxml\"));\r\n      Stage detailStage = new Stage();\r\n      detailStage.setScene(new Scene(loader.load()));\r\n\r\n      BookDetailsController controller = loader.getController();\r\n      controller.setItemDetail(book);\r\n\r\n      detailStage.setTitle(\"Book Item Detail\");\r\n      detailStage.show();\r\n    } catch (Exception e) {\r\n      e.printStackTrace();\r\n    }\r\n  }\r\n\r\n  private void loadBookData() {\r\n    List<Author> authors1 = new ArrayList<>();\r\n    authors1.add(new Author(\"Author One\"));\r\n\r\n    List<Author> authors2 = new ArrayList<>();\r\n    authors2.add(new Author(\"Author Two\"));\r\n\r\n    List<Author> authors3 = new ArrayList<>();\r\n    authors3.add(new Author(\"Author Three\"));\r\n\r\n    // This would normally be loaded from a database or some service\r\n    bookList.add(\r\n        new Book(\r\n            \"510251\", \"Book Title 1\", \"Subject 1\", \"Publisher 1\", \"English\", 200,\r\n            authors1));\r\n    bookList.add(\r\n        new Book(\r\n            \"496717\", \"Book Title 2\", \"Subject 2\", \"Publisher 2\", \"English\", 300,\r\n            authors2));\r\n    bookList.add(\r\n        new Book(\"111735\", \"Book Title 3\", \"Subject 3\", \"Publisher 3\", \"English\", 150,\r\n            authors3));\r\n    tableView.setItems(bookList);\r\n  }\r\n\r\n\r\n  private void filterBookList(String searchText) {\r\n    ObservableList<Book> filteredList = FXCollections.observableArrayList();\r\n\r\n    if (searchText == null || searchText.isEmpty()) {\r\n      // Show the full list if no search text is provided\r\n      tableView.setItems(bookList);\r\n    } else {\r\n      // Convert search text to lowercase for case-insensitive matching\r\n      String lowerCaseFilter = searchText.toLowerCase();\r\n\r\n      for (Book book : bookList) {\r\n        // Match against title or ISBN\r\n        if (book.getISBN().toLowerCase().contains(lowerCaseFilter) ||\r\n            book.getTitle().toLowerCase().contains(lowerCaseFilter)) {\r\n          filteredList.add(book);\r\n        }\r\n      }\r\n      tableView.setItems(filteredList);\r\n    }\r\n  }\r\n\r\n  public void onSearchBook(ActionEvent actionEvent) {\r\n    String searchText = searchField.getText();\r\n    filterBookList(searchText);\r\n  }\r\n}\r\n
===================================================================
diff --git a/src/main/java/org/group4/librarymanagercode/BookViewController.java b/src/main/java/org/group4/librarymanagercode/BookViewController.java
--- a/src/main/java/org/group4/librarymanagercode/BookViewController.java	(revision 727db2d55abcbab1293371058798d8af6e29d376)
+++ b/src/main/java/org/group4/librarymanagercode/BookViewController.java	(date 1730209761408)
@@ -119,9 +119,11 @@
 
   private void loadBookData() {
     List<Author> authors1 = new ArrayList<>();
-    authors1.add(new Author("Author One"));
+    authors1.add(new Author("Author one"));
 
     List<Author> authors2 = new ArrayList<>();
+
+
     authors2.add(new Author("Author Two"));
 
     List<Author> authors3 = new ArrayList<>();
